language: cpp

sudo: enabled
dist: trusty

branches:
  only:
  - master
  - pending
  - working

matrix:
  include:

    - name: macOS clang 
      os: osx
      env: COMPILER=clang++

    - name: macOS gcc 
      os: osx
      osx_image: xcode8.3
      env: COMPILER=g++-7

    - name: Linux clang
      os: linux
      services:
        - docker      
      env: DOCKER=ubuntu:latest COMPILER=clang++-5.0

    - name: Linux gcc + coverage
      os: linux
      services:
        - docker
      env: DOCKER=ubuntu:latest COMPILER=c++ COVERAGE=ON

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi 
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask uninstall --force oclint; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc@7 mpfr gmp gtk cairo; fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "$COMPILER" == "g++-7" ]]; then 
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        sudo -H python2 get-pip.py
        sudo -H pip2 install pytest --upgrade --ignore-installed six
      else
        sudo easy_install pip
        sudo pip3 install --upgrade pip
        sudo pip3 install pytest
      fi
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ -n "$DOCKER" ]]; then
        docker pull $DOCKER
        CONTAINER_ID=$(docker run --detach --tty --volume="$PWD":/ariadne --workdir=/ariadne $DOCKER)
        SH_PREFIX="docker exec --tty $CONTAINER_ID"
        $SH_PREFIX apt update
        $SH_PREFIX apt install -y cmake   
      fi
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then $SH_PREFIX apt install -y clang++-5.0 python3-pip libpython3-dev libgtk2.0-dev libcairo2-dev libmpfr-dev libgmp-dev; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then $SH_PREFIX pip3 install pytest; fi

script: 
  - git submodule update --init --recursive
  - CMAKE_ARGS="-DCMAKE_CXX_COMPILER=$COMPILER"
  - if [[ -n "$COVERAGE" ]]; then CMAKE_ARGS="$CMAKE_ARGS -DCMAKE_BUILD_TYPE=Debug"; fi  
  - $SH_PREFIX cmake . $CMAKE_ARGS
  - $SH_PREFIX make
  - if [[ -n "$COVERAGE" ]]; then $SH_PREFIX ctest -L "primary" -LE "python" -E "taylor_model|dyadic|number|test_paving"; else $SH_PREFIX ctest; fi
  
after_success:
  - if [[ -n "$COVERAGE" ]]; then bash <(curl -s https://codecov.io/bash); fi