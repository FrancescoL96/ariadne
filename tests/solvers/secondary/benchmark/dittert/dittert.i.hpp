#pragma once

Void TestOptimiser::benchmark_dittert()
{
  List<EffectiveScalarMultivariateFunction> x =
      EffectiveScalarMultivariateFunction::coordinates(327);
  EffectiveScalarMultivariateFunction f(
      (-exp((log(x[311]) + log(x[313]) + log(x[315]) + log(x[317]) +
             log(x[319]) + log(x[321]) + log(x[323]) + log(x[325])))) +
      (-exp((log(x[312]) + log(x[314]) + log(x[316]) + log(x[318]) +
             log(x[320]) + log(x[322]) + log(x[324]) + log(x[326])))) +
      x[246]);
  ExactBoxType D =
      ExactBoxType{{0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, +inf},       {0.0, +inf},
                   {0.0, +inf},       {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0, 1.0},
                   {0.0, 1.0},        {0.0, 1.0},        {0.0000001, +inf},
                   {0.0000001, +inf}, {0.0000001, +inf}, {0.0000001, +inf},
                   {0.0000001, +inf}, {0.0000001, +inf}, {0.0000001, +inf},
                   {0.0000001, +inf}, {0.0000001, +inf}, {0.0000001, +inf},
                   {0.0000001, +inf}, {0.0000001, +inf}, {0.0000001, +inf},
                   {0.0000001, +inf}, {0.0000001, +inf}, {0.0000001, +inf}};
  EffectiveVectorMultivariateFunction g = {
      x[261] * x[254] + x[262] * x[253] - x[0],
      x[260] * x[254] + x[262] * x[252] - x[1],
      x[260] * x[253] + x[261] * x[252] - x[2],
      x[268] * x[0] + x[269] * x[1] + x[270] * x[2] - x[3],
      x[259] * x[254] + x[262] * x[251] - x[4],
      x[259] * x[253] + x[261] * x[251] - x[5],
      x[267] * x[0] + x[269] * x[4] + x[270] * x[5] - x[6],
      x[259] * x[252] + x[260] * x[251] - x[7],
      x[267] * x[1] + x[268] * x[4] + x[270] * x[7] - x[8],
      x[267] * x[2] + x[268] * x[5] + x[269] * x[7] - x[9],
      x[275] * x[3] + x[276] * x[6] + x[277] * x[8] + x[278] * x[9] - x[10],
      x[258] * x[254] + x[262] * x[250] - x[11],
      x[258] * x[253] + x[261] * x[250] - x[12],
      x[266] * x[0] + x[269] * x[11] + x[270] * x[12] - x[13],
      x[258] * x[252] + x[260] * x[250] - x[14],
      x[266] * x[1] + x[268] * x[11] + x[270] * x[14] - x[15],
      x[266] * x[2] + x[268] * x[12] + x[269] * x[14] - x[16],
      x[274] * x[3] + x[276] * x[13] + x[277] * x[15] + x[278] * x[16] - x[17],
      x[258] * x[251] + x[259] * x[250] - x[18],
      x[266] * x[4] + x[267] * x[11] + x[270] * x[18] - x[19],
      x[266] * x[5] + x[267] * x[12] + x[269] * x[18] - x[20],
      x[274] * x[6] + x[275] * x[13] + x[277] * x[19] + x[278] * x[20] - x[21],
      x[266] * x[7] + x[267] * x[14] + x[268] * x[18] - x[22],
      x[274] * x[8] + x[275] * x[15] + x[276] * x[19] + x[278] * x[22] - x[23],
      x[274] * x[9] + x[275] * x[16] + x[276] * x[20] + x[277] * x[22] - x[24],
      x[282] * x[10] + x[283] * x[17] + x[284] * x[21] + x[285] * x[23] +
          x[286] * x[24] - x[25],
      x[257] * x[254] + x[262] * x[249] - x[26],
      x[257] * x[253] + x[261] * x[249] - x[27],
      x[265] * x[0] + x[269] * x[26] + x[270] * x[27] - x[28],
      x[257] * x[252] + x[260] * x[249] - x[29],
      x[265] * x[1] + x[268] * x[26] + x[270] * x[29] - x[30],
      x[265] * x[2] + x[268] * x[27] + x[269] * x[29] - x[31],
      x[273] * x[3] + x[276] * x[28] + x[277] * x[30] + x[278] * x[31] - x[32],
      x[257] * x[251] + x[259] * x[249] - x[33],
      x[265] * x[4] + x[267] * x[26] + x[270] * x[33] - x[34],
      x[265] * x[5] + x[267] * x[27] + x[269] * x[33] - x[35],
      x[273] * x[6] + x[275] * x[28] + x[277] * x[34] + x[278] * x[35] - x[36],
      x[265] * x[7] + x[267] * x[29] + x[268] * x[33] - x[37],
      x[273] * x[8] + x[275] * x[30] + x[276] * x[34] + x[278] * x[37] - x[38],
      x[273] * x[9] + x[275] * x[31] + x[276] * x[35] + x[277] * x[37] - x[39],
      x[281] * x[10] + x[283] * x[32] + x[284] * x[36] + x[285] * x[38] +
          x[286] * x[39] - x[40],
      x[257] * x[250] + x[258] * x[249] - x[41],
      x[265] * x[11] + x[266] * x[26] + x[270] * x[41] - x[42],
      x[265] * x[12] + x[266] * x[27] + x[269] * x[41] - x[43],
      x[273] * x[13] + x[274] * x[28] + x[277] * x[42] + x[278] * x[43] - x[44],
      x[265] * x[14] + x[266] * x[29] + x[268] * x[41] - x[45],
      x[273] * x[15] + x[274] * x[30] + x[276] * x[42] + x[278] * x[45] - x[46],
      x[273] * x[16] + x[274] * x[31] + x[276] * x[43] + x[277] * x[45] - x[47],
      x[281] * x[17] + x[282] * x[32] + x[284] * x[44] + x[285] * x[46] +
          x[286] * x[47] - x[48],
      x[265] * x[18] + x[266] * x[33] + x[267] * x[41] - x[49],
      x[273] * x[19] + x[274] * x[34] + x[275] * x[42] + x[278] * x[49] - x[50],
      x[273] * x[20] + x[274] * x[35] + x[275] * x[43] + x[277] * x[49] - x[51],
      x[281] * x[21] + x[282] * x[36] + x[283] * x[44] + x[285] * x[50] +
          x[286] * x[51] - x[52],
      x[273] * x[22] + x[274] * x[37] + x[275] * x[45] + x[276] * x[49] - x[53],
      x[281] * x[23] + x[282] * x[38] + x[283] * x[46] + x[284] * x[50] +
          x[286] * x[53] - x[54],
      x[281] * x[24] + x[282] * x[39] + x[283] * x[47] + x[284] * x[51] +
          x[285] * x[53] - x[55],
      x[289] * x[25] + x[290] * x[40] + x[291] * x[48] + x[292] * x[52] +
          x[293] * x[54] + x[294] * x[55] - x[56],
      x[256] * x[254] + x[262] * x[248] - x[57],
      x[256] * x[253] + x[261] * x[248] - x[58],
      x[264] * x[0] + x[269] * x[57] + x[270] * x[58] - x[59],
      x[256] * x[252] + x[260] * x[248] - x[60],
      x[264] * x[1] + x[268] * x[57] + x[270] * x[60] - x[61],
      x[264] * x[2] + x[268] * x[58] + x[269] * x[60] - x[62],
      x[272] * x[3] + x[276] * x[59] + x[277] * x[61] + x[278] * x[62] - x[63],
      x[256] * x[251] + x[259] * x[248] - x[64],
      x[264] * x[4] + x[267] * x[57] + x[270] * x[64] - x[65],
      x[264] * x[5] + x[267] * x[58] + x[269] * x[64] - x[66],
      x[272] * x[6] + x[275] * x[59] + x[277] * x[65] + x[278] * x[66] - x[67],
      x[264] * x[7] + x[267] * x[60] + x[268] * x[64] - x[68],
      x[272] * x[8] + x[275] * x[61] + x[276] * x[65] + x[278] * x[68] - x[69],
      x[272] * x[9] + x[275] * x[62] + x[276] * x[66] + x[277] * x[68] - x[70],
      x[280] * x[10] + x[283] * x[63] + x[284] * x[67] + x[285] * x[69] +
          x[286] * x[70] - x[71],
      x[256] * x[250] + x[258] * x[248] - x[72],
      x[264] * x[11] + x[266] * x[57] + x[270] * x[72] - x[73],
      x[264] * x[12] + x[266] * x[58] + x[269] * x[72] - x[74],
      x[272] * x[13] + x[274] * x[59] + x[277] * x[73] + x[278] * x[74] - x[75],
      x[264] * x[14] + x[266] * x[60] + x[268] * x[72] - x[76],
      x[272] * x[15] + x[274] * x[61] + x[276] * x[73] + x[278] * x[76] - x[77],
      x[272] * x[16] + x[274] * x[62] + x[276] * x[74] + x[277] * x[76] - x[78],
      x[280] * x[17] + x[282] * x[63] + x[284] * x[75] + x[285] * x[77] +
          x[286] * x[78] - x[79],
      x[264] * x[18] + x[266] * x[64] + x[267] * x[72] - x[80],
      x[272] * x[19] + x[274] * x[65] + x[275] * x[73] + x[278] * x[80] - x[81],
      x[272] * x[20] + x[274] * x[66] + x[275] * x[74] + x[277] * x[80] - x[82],
      x[280] * x[21] + x[282] * x[67] + x[283] * x[75] + x[285] * x[81] +
          x[286] * x[82] - x[83],
      x[272] * x[22] + x[274] * x[68] + x[275] * x[76] + x[276] * x[80] - x[84],
      x[280] * x[23] + x[282] * x[69] + x[283] * x[77] + x[284] * x[81] +
          x[286] * x[84] - x[85],
      x[280] * x[24] + x[282] * x[70] + x[283] * x[78] + x[284] * x[82] +
          x[285] * x[84] - x[86],
      x[288] * x[25] + x[290] * x[71] + x[291] * x[79] + x[292] * x[83] +
          x[293] * x[85] + x[294] * x[86] - x[87],
      x[256] * x[249] + x[257] * x[248] - x[88],
      x[264] * x[26] + x[265] * x[57] + x[270] * x[88] - x[89],
      x[264] * x[27] + x[265] * x[58] + x[269] * x[88] - x[90],
      x[272] * x[28] + x[273] * x[59] + x[277] * x[89] + x[278] * x[90] - x[91],
      x[264] * x[29] + x[265] * x[60] + x[268] * x[88] - x[92],
      x[272] * x[30] + x[273] * x[61] + x[276] * x[89] + x[278] * x[92] - x[93],
      x[272] * x[31] + x[273] * x[62] + x[276] * x[90] + x[277] * x[92] - x[94],
      x[280] * x[32] + x[281] * x[63] + x[284] * x[91] + x[285] * x[93] +
          x[286] * x[94] - x[95],
      x[264] * x[33] + x[265] * x[64] + x[267] * x[88] - x[96],
      x[272] * x[34] + x[273] * x[65] + x[275] * x[89] + x[278] * x[96] - x[97],
      x[272] * x[35] + x[273] * x[66] + x[275] * x[90] + x[277] * x[96] - x[98],
      x[280] * x[36] + x[281] * x[67] + x[283] * x[91] + x[285] * x[97] +
          x[286] * x[98] - x[99],
      x[272] * x[37] + x[273] * x[68] + x[275] * x[92] + x[276] * x[96] -
          x[100],
      x[280] * x[38] + x[281] * x[69] + x[283] * x[93] + x[284] * x[97] +
          x[286] * x[100] - x[101],
      x[280] * x[39] + x[281] * x[70] + x[283] * x[94] + x[284] * x[98] +
          x[285] * x[100] - x[102],
      x[288] * x[40] + x[289] * x[71] + x[291] * x[95] + x[292] * x[99] +
          x[293] * x[101] + x[294] * x[102] - x[103],
      x[264] * x[41] + x[265] * x[72] + x[266] * x[88] - x[104],
      x[272] * x[42] + x[273] * x[73] + x[274] * x[89] + x[278] * x[104] -
          x[105],
      x[272] * x[43] + x[273] * x[74] + x[274] * x[90] + x[277] * x[104] -
          x[106],
      x[280] * x[44] + x[281] * x[75] + x[282] * x[91] + x[285] * x[105] +
          x[286] * x[106] - x[107],
      x[272] * x[45] + x[273] * x[76] + x[274] * x[92] + x[276] * x[104] -
          x[108],
      x[280] * x[46] + x[281] * x[77] + x[282] * x[93] + x[284] * x[105] +
          x[286] * x[108] - x[109],
      x[280] * x[47] + x[281] * x[78] + x[282] * x[94] + x[284] * x[106] +
          x[285] * x[108] - x[110],
      x[288] * x[48] + x[289] * x[79] + x[290] * x[95] + x[292] * x[107] +
          x[293] * x[109] + x[294] * x[110] - x[111],
      x[272] * x[49] + x[273] * x[80] + x[274] * x[96] + x[275] * x[104] -
          x[112],
      x[280] * x[50] + x[281] * x[81] + x[282] * x[97] + x[283] * x[105] +
          x[286] * x[112] - x[113],
      x[280] * x[51] + x[281] * x[82] + x[282] * x[98] + x[283] * x[106] +
          x[285] * x[112] - x[114],
      x[288] * x[52] + x[289] * x[83] + x[290] * x[99] + x[291] * x[107] +
          x[293] * x[113] + x[294] * x[114] - x[115],
      x[280] * x[53] + x[281] * x[84] + x[282] * x[100] + x[283] * x[108] +
          x[284] * x[112] - x[116],
      x[288] * x[54] + x[289] * x[85] + x[290] * x[101] + x[291] * x[109] +
          x[292] * x[113] + x[294] * x[116] - x[117],
      x[288] * x[55] + x[289] * x[86] + x[290] * x[102] + x[291] * x[110] +
          x[292] * x[114] + x[293] * x[116] - x[118],
      x[296] * x[56] + x[297] * x[87] + x[298] * x[103] + x[299] * x[111] +
          x[300] * x[115] + x[301] * x[117] + x[302] * x[118] - x[119],
      x[255] * x[254] + x[262] * x[247] - x[120],
      x[255] * x[253] + x[261] * x[247] - x[121],
      x[263] * x[0] + x[269] * x[120] + x[270] * x[121] - x[122],
      x[255] * x[252] + x[260] * x[247] - x[123],
      x[263] * x[1] + x[268] * x[120] + x[270] * x[123] - x[124],
      x[263] * x[2] + x[268] * x[121] + x[269] * x[123] - x[125],
      x[271] * x[3] + x[276] * x[122] + x[277] * x[124] + x[278] * x[125] -
          x[126],
      x[255] * x[251] + x[259] * x[247] - x[127],
      x[263] * x[4] + x[267] * x[120] + x[270] * x[127] - x[128],
      x[263] * x[5] + x[267] * x[121] + x[269] * x[127] - x[129],
      x[271] * x[6] + x[275] * x[122] + x[277] * x[128] + x[278] * x[129] -
          x[130],
      x[263] * x[7] + x[267] * x[123] + x[268] * x[127] - x[131],
      x[271] * x[8] + x[275] * x[124] + x[276] * x[128] + x[278] * x[131] -
          x[132],
      x[271] * x[9] + x[275] * x[125] + x[276] * x[129] + x[277] * x[131] -
          x[133],
      x[279] * x[10] + x[283] * x[126] + x[284] * x[130] + x[285] * x[132] +
          x[286] * x[133] - x[134],
      x[255] * x[250] + x[258] * x[247] - x[135],
      x[263] * x[11] + x[266] * x[120] + x[270] * x[135] - x[136],
      x[263] * x[12] + x[266] * x[121] + x[269] * x[135] - x[137],
      x[271] * x[13] + x[274] * x[122] + x[277] * x[136] + x[278] * x[137] -
          x[138],
      x[263] * x[14] + x[266] * x[123] + x[268] * x[135] - x[139],
      x[271] * x[15] + x[274] * x[124] + x[276] * x[136] + x[278] * x[139] -
          x[140],
      x[271] * x[16] + x[274] * x[125] + x[276] * x[137] + x[277] * x[139] -
          x[141],
      x[279] * x[17] + x[282] * x[126] + x[284] * x[138] + x[285] * x[140] +
          x[286] * x[141] - x[142],
      x[263] * x[18] + x[266] * x[127] + x[267] * x[135] - x[143],
      x[271] * x[19] + x[274] * x[128] + x[275] * x[136] + x[278] * x[143] -
          x[144],
      x[271] * x[20] + x[274] * x[129] + x[275] * x[137] + x[277] * x[143] -
          x[145],
      x[279] * x[21] + x[282] * x[130] + x[283] * x[138] + x[285] * x[144] +
          x[286] * x[145] - x[146],
      x[271] * x[22] + x[274] * x[131] + x[275] * x[139] + x[276] * x[143] -
          x[147],
      x[279] * x[23] + x[282] * x[132] + x[283] * x[140] + x[284] * x[144] +
          x[286] * x[147] - x[148],
      x[279] * x[24] + x[282] * x[133] + x[283] * x[141] + x[284] * x[145] +
          x[285] * x[147] - x[149],
      x[287] * x[25] + x[290] * x[134] + x[291] * x[142] + x[292] * x[146] +
          x[293] * x[148] + x[294] * x[149] - x[150],
      x[255] * x[249] + x[257] * x[247] - x[151],
      x[263] * x[26] + x[265] * x[120] + x[270] * x[151] - x[152],
      x[263] * x[27] + x[265] * x[121] + x[269] * x[151] - x[153],
      x[271] * x[28] + x[273] * x[122] + x[277] * x[152] + x[278] * x[153] -
          x[154],
      x[263] * x[29] + x[265] * x[123] + x[268] * x[151] - x[155],
      x[271] * x[30] + x[273] * x[124] + x[276] * x[152] + x[278] * x[155] -
          x[156],
      x[271] * x[31] + x[273] * x[125] + x[276] * x[153] + x[277] * x[155] -
          x[157],
      x[279] * x[32] + x[281] * x[126] + x[284] * x[154] + x[285] * x[156] +
          x[286] * x[157] - x[158],
      x[263] * x[33] + x[265] * x[127] + x[267] * x[151] - x[159],
      x[271] * x[34] + x[273] * x[128] + x[275] * x[152] + x[278] * x[159] -
          x[160],
      x[271] * x[35] + x[273] * x[129] + x[275] * x[153] + x[277] * x[159] -
          x[161],
      x[279] * x[36] + x[281] * x[130] + x[283] * x[154] + x[285] * x[160] +
          x[286] * x[161] - x[162],
      x[271] * x[37] + x[273] * x[131] + x[275] * x[155] + x[276] * x[159] -
          x[163],
      x[279] * x[38] + x[281] * x[132] + x[283] * x[156] + x[284] * x[160] +
          x[286] * x[163] - x[164],
      x[279] * x[39] + x[281] * x[133] + x[283] * x[157] + x[284] * x[161] +
          x[285] * x[163] - x[165],
      x[287] * x[40] + x[289] * x[134] + x[291] * x[158] + x[292] * x[162] +
          x[293] * x[164] + x[294] * x[165] - x[166],
      x[263] * x[41] + x[265] * x[135] + x[266] * x[151] - x[167],
      x[271] * x[42] + x[273] * x[136] + x[274] * x[152] + x[278] * x[167] -
          x[168],
      x[271] * x[43] + x[273] * x[137] + x[274] * x[153] + x[277] * x[167] -
          x[169],
      x[279] * x[44] + x[281] * x[138] + x[282] * x[154] + x[285] * x[168] +
          x[286] * x[169] - x[170],
      x[271] * x[45] + x[273] * x[139] + x[274] * x[155] + x[276] * x[167] -
          x[171],
      x[279] * x[46] + x[281] * x[140] + x[282] * x[156] + x[284] * x[168] +
          x[286] * x[171] - x[172],
      x[279] * x[47] + x[281] * x[141] + x[282] * x[157] + x[284] * x[169] +
          x[285] * x[171] - x[173],
      x[287] * x[48] + x[289] * x[142] + x[290] * x[158] + x[292] * x[170] +
          x[293] * x[172] + x[294] * x[173] - x[174],
      x[271] * x[49] + x[273] * x[143] + x[274] * x[159] + x[275] * x[167] -
          x[175],
      x[279] * x[50] + x[281] * x[144] + x[282] * x[160] + x[283] * x[168] +
          x[286] * x[175] - x[176],
      x[279] * x[51] + x[281] * x[145] + x[282] * x[161] + x[283] * x[169] +
          x[285] * x[175] - x[177],
      x[287] * x[52] + x[289] * x[146] + x[290] * x[162] + x[291] * x[170] +
          x[293] * x[176] + x[294] * x[177] - x[178],
      x[279] * x[53] + x[281] * x[147] + x[282] * x[163] + x[283] * x[171] +
          x[284] * x[175] - x[179],
      x[287] * x[54] + x[289] * x[148] + x[290] * x[164] + x[291] * x[172] +
          x[292] * x[176] + x[294] * x[179] - x[180],
      x[287] * x[55] + x[289] * x[149] + x[290] * x[165] + x[291] * x[173] +
          x[292] * x[177] + x[293] * x[179] - x[181],
      x[295] * x[56] + x[297] * x[150] + x[298] * x[166] + x[299] * x[174] +
          x[300] * x[178] + x[301] * x[180] + x[302] * x[181] - x[182],
      x[255] * x[248] + x[256] * x[247] - x[183],
      x[263] * x[57] + x[264] * x[120] + x[270] * x[183] - x[184],
      x[263] * x[58] + x[264] * x[121] + x[269] * x[183] - x[185],
      x[271] * x[59] + x[272] * x[122] + x[277] * x[184] + x[278] * x[185] -
          x[186],
      x[263] * x[60] + x[264] * x[123] + x[268] * x[183] - x[187],
      x[271] * x[61] + x[272] * x[124] + x[276] * x[184] + x[278] * x[187] -
          x[188],
      x[271] * x[62] + x[272] * x[125] + x[276] * x[185] + x[277] * x[187] -
          x[189],
      x[279] * x[63] + x[280] * x[126] + x[284] * x[186] + x[285] * x[188] +
          x[286] * x[189] - x[190],
      x[263] * x[64] + x[264] * x[127] + x[267] * x[183] - x[191],
      x[271] * x[65] + x[272] * x[128] + x[275] * x[184] + x[278] * x[191] -
          x[192],
      x[271] * x[66] + x[272] * x[129] + x[275] * x[185] + x[277] * x[191] -
          x[193],
      x[279] * x[67] + x[280] * x[130] + x[283] * x[186] + x[285] * x[192] +
          x[286] * x[193] - x[194],
      x[271] * x[68] + x[272] * x[131] + x[275] * x[187] + x[276] * x[191] -
          x[195],
      x[279] * x[69] + x[280] * x[132] + x[283] * x[188] + x[284] * x[192] +
          x[286] * x[195] - x[196],
      x[279] * x[70] + x[280] * x[133] + x[283] * x[189] + x[284] * x[193] +
          x[285] * x[195] - x[197],
      x[287] * x[71] + x[288] * x[134] + x[291] * x[190] + x[292] * x[194] +
          x[293] * x[196] + x[294] * x[197] - x[198],
      x[263] * x[72] + x[264] * x[135] + x[266] * x[183] - x[199],
      x[271] * x[73] + x[272] * x[136] + x[274] * x[184] + x[278] * x[199] -
          x[200],
      x[271] * x[74] + x[272] * x[137] + x[274] * x[185] + x[277] * x[199] -
          x[201],
      x[279] * x[75] + x[280] * x[138] + x[282] * x[186] + x[285] * x[200] +
          x[286] * x[201] - x[202],
      x[271] * x[76] + x[272] * x[139] + x[274] * x[187] + x[276] * x[199] -
          x[203],
      x[279] * x[77] + x[280] * x[140] + x[282] * x[188] + x[284] * x[200] +
          x[286] * x[203] - x[204],
      x[279] * x[78] + x[280] * x[141] + x[282] * x[189] + x[284] * x[201] +
          x[285] * x[203] - x[205],
      x[287] * x[79] + x[288] * x[142] + x[290] * x[190] + x[292] * x[202] +
          x[293] * x[204] + x[294] * x[205] - x[206],
      x[271] * x[80] + x[272] * x[143] + x[274] * x[191] + x[275] * x[199] -
          x[207],
      x[279] * x[81] + x[280] * x[144] + x[282] * x[192] + x[283] * x[200] +
          x[286] * x[207] - x[208],
      x[279] * x[82] + x[280] * x[145] + x[282] * x[193] + x[283] * x[201] +
          x[285] * x[207] - x[209],
      x[287] * x[83] + x[288] * x[146] + x[290] * x[194] + x[291] * x[202] +
          x[293] * x[208] + x[294] * x[209] - x[210],
      x[279] * x[84] + x[280] * x[147] + x[282] * x[195] + x[283] * x[203] +
          x[284] * x[207] - x[211],
      x[287] * x[85] + x[288] * x[148] + x[290] * x[196] + x[291] * x[204] +
          x[292] * x[208] + x[294] * x[211] - x[212],
      x[287] * x[86] + x[288] * x[149] + x[290] * x[197] + x[291] * x[205] +
          x[292] * x[209] + x[293] * x[211] - x[213],
      x[295] * x[87] + x[296] * x[150] + x[298] * x[198] + x[299] * x[206] +
          x[300] * x[210] + x[301] * x[212] + x[302] * x[213] - x[214],
      x[263] * x[88] + x[264] * x[151] + x[265] * x[183] - x[215],
      x[271] * x[89] + x[272] * x[152] + x[273] * x[184] + x[278] * x[215] -
          x[216],
      x[271] * x[90] + x[272] * x[153] + x[273] * x[185] + x[277] * x[215] -
          x[217],
      x[279] * x[91] + x[280] * x[154] + x[281] * x[186] + x[285] * x[216] +
          x[286] * x[217] - x[218],
      x[271] * x[92] + x[272] * x[155] + x[273] * x[187] + x[276] * x[215] -
          x[219],
      x[279] * x[93] + x[280] * x[156] + x[281] * x[188] + x[284] * x[216] +
          x[286] * x[219] - x[220],
      x[279] * x[94] + x[280] * x[157] + x[281] * x[189] + x[284] * x[217] +
          x[285] * x[219] - x[221],
      x[287] * x[95] + x[288] * x[158] + x[289] * x[190] + x[292] * x[218] +
          x[293] * x[220] + x[294] * x[221] - x[222],
      x[271] * x[96] + x[272] * x[159] + x[273] * x[191] + x[275] * x[215] -
          x[223],
      x[279] * x[97] + x[280] * x[160] + x[281] * x[192] + x[283] * x[216] +
          x[286] * x[223] - x[224],
      x[279] * x[98] + x[280] * x[161] + x[281] * x[193] + x[283] * x[217] +
          x[285] * x[223] - x[225],
      x[287] * x[99] + x[288] * x[162] + x[289] * x[194] + x[291] * x[218] +
          x[293] * x[224] + x[294] * x[225] - x[226],
      x[279] * x[100] + x[280] * x[163] + x[281] * x[195] + x[283] * x[219] +
          x[284] * x[223] - x[227],
      x[287] * x[101] + x[288] * x[164] + x[289] * x[196] + x[291] * x[220] +
          x[292] * x[224] + x[294] * x[227] - x[228],
      x[287] * x[102] + x[288] * x[165] + x[289] * x[197] + x[291] * x[221] +
          x[292] * x[225] + x[293] * x[227] - x[229],
      x[295] * x[103] + x[296] * x[166] + x[297] * x[198] + x[299] * x[222] +
          x[300] * x[226] + x[301] * x[228] + x[302] * x[229] - x[230],
      x[271] * x[104] + x[272] * x[167] + x[273] * x[199] + x[274] * x[215] -
          x[231],
      x[279] * x[105] + x[280] * x[168] + x[281] * x[200] + x[282] * x[216] +
          x[286] * x[231] - x[232],
      x[279] * x[106] + x[280] * x[169] + x[281] * x[201] + x[282] * x[217] +
          x[285] * x[231] - x[233],
      x[287] * x[107] + x[288] * x[170] + x[289] * x[202] + x[290] * x[218] +
          x[293] * x[232] + x[294] * x[233] - x[234],
      x[279] * x[108] + x[280] * x[171] + x[281] * x[203] + x[282] * x[219] +
          x[284] * x[231] - x[235],
      x[287] * x[109] + x[288] * x[172] + x[289] * x[204] + x[290] * x[220] +
          x[292] * x[232] + x[294] * x[235] - x[236],
      x[287] * x[110] + x[288] * x[173] + x[289] * x[205] + x[290] * x[221] +
          x[292] * x[233] + x[293] * x[235] - x[237],
      x[295] * x[111] + x[296] * x[174] + x[297] * x[206] + x[298] * x[222] +
          x[300] * x[234] + x[301] * x[236] + x[302] * x[237] - x[238],
      x[279] * x[112] + x[280] * x[175] + x[281] * x[207] + x[282] * x[223] +
          x[283] * x[231] - x[239],
      x[287] * x[113] + x[288] * x[176] + x[289] * x[208] + x[290] * x[224] +
          x[291] * x[232] + x[294] * x[239] - x[240],
      x[287] * x[114] + x[288] * x[177] + x[289] * x[209] + x[290] * x[225] +
          x[291] * x[233] + x[293] * x[239] - x[241],
      x[295] * x[115] + x[296] * x[178] + x[297] * x[210] + x[298] * x[226] +
          x[299] * x[234] + x[301] * x[240] + x[302] * x[241] - x[242],
      x[287] * x[116] + x[288] * x[179] + x[289] * x[211] + x[290] * x[227] +
          x[291] * x[235] + x[292] * x[239] - x[243],
      x[295] * x[117] + x[296] * x[180] + x[297] * x[212] + x[298] * x[228] +
          x[299] * x[236] + x[300] * x[240] + x[302] * x[243] - x[244],
      x[295] * x[118] + x[296] * x[181] + x[297] * x[213] + x[298] * x[229] +
          x[299] * x[237] + x[300] * x[241] + x[301] * x[243] - x[245],
      x[303] * x[119] + x[304] * x[182] + x[305] * x[214] + x[306] * x[230] +
          x[307] * x[238] + x[308] * x[242] + x[309] * x[244] +
          x[310] * x[245] - x[246],
      x[247] + x[248] + x[249] + x[250] + x[251] + x[252] + x[253] + x[254] -
          x[311],
      x[247] + x[255] + x[263] + x[271] + x[279] + x[287] + x[295] + x[303] -
          x[312],
      x[248] + x[256] + x[264] + x[272] + x[280] + x[288] + x[296] + x[304] -
          x[314],
      x[249] + x[257] + x[265] + x[273] + x[281] + x[289] + x[297] + x[305] -
          x[316],
      x[250] + x[258] + x[266] + x[274] + x[282] + x[290] + x[298] + x[306] -
          x[318],
      x[251] + x[259] + x[267] + x[275] + x[283] + x[291] + x[299] + x[307] -
          x[320],
      x[252] + x[260] + x[268] + x[276] + x[284] + x[292] + x[300] + x[308] -
          x[322],
      x[253] + x[261] + x[269] + x[277] + x[285] + x[293] + x[301] + x[309] -
          x[324],
      x[254] + x[262] + x[270] + x[278] + x[286] + x[294] + x[302] + x[310] -
          x[326],
      x[255] + x[256] + x[257] + x[258] + x[259] + x[260] + x[261] + x[262] -
          x[313],
      x[263] + x[264] + x[265] + x[266] + x[267] + x[268] + x[269] + x[270] -
          x[315],
      x[271] + x[272] + x[273] + x[274] + x[275] + x[276] + x[277] + x[278] -
          x[317],
      x[279] + x[280] + x[281] + x[282] + x[283] + x[284] + x[285] + x[286] -
          x[319],
      x[287] + x[288] + x[289] + x[290] + x[291] + x[292] + x[293] + x[294] -
          x[321],
      x[295] + x[296] + x[297] + x[298] + x[299] + x[300] + x[301] + x[302] -
          x[323],
      x[303] + x[304] + x[305] + x[306] + x[307] + x[308] + x[309] + x[310] -
          x[325],
      x[311] + x[313] + x[315] + x[317] + x[319] + x[321] + x[323] + x[325] -
          Real(8.0)};
  ExactBoxType C = {
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0},
      {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}, {0.0, 0.0}};
  float             elapsed_time = 0;
  clock_t           s_time       = clock();
  FloatBoundsVector x_optimal    = optimiser->minimise(f, D, g, C);
  clock_t           e_time       = clock();

  elapsed_time = static_cast<float>(e_time - s_time) / CLOCKS_PER_SEC;
  std::cout << "Elapsed time: " << elapsed_time << " sec\n";

  std::cout << "f(x_optimal): " << f(x_optimal) << "\n";
  ARIADNE_TEST_BINARY_PREDICATE(element, x_optimal, D);
  ARIADNE_TEST_BINARY_PREDICATE(element, g(x_optimal), C);
}